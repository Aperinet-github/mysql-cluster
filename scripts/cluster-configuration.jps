{
    "jpsType": "update",
    "name": "Distributed Database Cluster",
    "description": "DB Auto Clustering: ProxySQL + 1 x Master + N x Slave",
    "success": "<table style='font-size:14px'><tr><td>PHP MyAdmin:</td><td><a href='${env.protocol}://docker${nodes.sqldb[0].id}-${env.domain}' target='_blank'>${env.protocol}://docker${nodes.sqldb[0].id}-${env.domain}</a></td></tr><tr><td>Login:</td><td><b>${globals.DB_USER}</b></td></tr><tr><td>Password:</td><td><b>${globals.DB_PASS}</b></td></tr></table>",
    "globals": {
        "PATH": "https://raw.githubusercontent.com/jelastic-jps/mysql-cluster/proxysql",
        "ADMIN_PASS": "${settings.admin_pass}",
        "DB_USER": "${settings.db_user}",
        "DB_PASS": "${settings.db_pass}",
        "REPLICATION_USER": "repl-${fn.random}",
        "REPLICATION_PASS": "${fn.password(20)}"
    },
    "onAfterScaleOut[nodeGroup:sqldb]": [{
        "forEach(event.response.nodes)": {
            "setupUser": {
                "filter": "${@i.id}"
            }
        }
    }, {
        "forEach(event.response.nodes)": {
            "setupReplication": {
                "filter": "${@i.id}"
            }
        }
    }],
    "onInstall": [{
        "forEach(nodes.sqldb)": {
            "setupUser": {
                "filter": "${@i.id}"
            }
        }
    }, {
        "forEach(nodes.sqldb)": {
            "setupReplication": {
                "filter": "${@i.id}"
            }
        }
    }, {
        "cmd [${nodes.sqldb[0]]": [
            "/sbin/chkconfig mysql off && service mysql stop && yum remove -y mysql-community-server",
            "wget ${globals.PATH}/configs/proxysql.cnf -O /etc/proxysql.cnf",
            "yum install -y https://github.com/sysown/proxysql/releases/download/v1.4.0/proxysql-1.4.0-1-centos7.x86_64.rpm",
            "/sbin/chkconfig proxysql on && service start proxysql",
            "",    
        ]

    
    }],
    "actions": {
        "setupReplication": {
            "cmd [${this.filter}]": [
                "wget ${globals.PATH}/scripts/setupReplication.sh -O /root/setupReplication.sh",
                "bash /root/setupReplication.sh node${nodes.sqldb[1].id} ${globals.DB_USER} ${globals.DB_PASS} ${globals.REPLICATION_USER} ${globals.REPLICATION_PASS} &>> /var/log/run.log"
            ],
            "user": "root"
        },
        "setupUser": {
            "cmd[${this.filter}]": [
                "wget ${globals.PATH}/scripts/setupUser.sh -O /root/setupUser.sh &>> /var/log/run.log",
                "bash /root/setupUser.sh ${globals.DB_USER} ${globals.DB_PASS} &>> /var/log/run.log"
            ],
            "user": "root"
        }
    }
}
